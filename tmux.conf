# Setting the prefix from `C-b` to `C-a`.
# By remapping the `CapsLock` key to `Ctrl`,
# you can make triggering commands more comfottable!
unbind C-b
set -g prefix C-space

# Ensure that we can send `Ctrl-a` to other apps.
bind C-space send-prefix

# Reload the file with Prefix r.
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# start window numbering at 1 for easier switching
set -g base-index 1

# colors
set -g default-terminal "screen-256color"

# unicode - no longer needed in tmux 2.2
# setw -g utf8 on
# set -g status-utf8 on

# Status Bar
set-option -g status-interval 5
set-option -g status-left ''
set-option -g status-right '%H:%M'
set-window-option -g window-status-current-fg green
set-option -g status-fg default
# load in the airline statusbar
if-shell "test -f ~/.tmuxline.conf" "source ~/.tmuxline.conf"

# Status Bar solarized-dark (default)
set-option -g status-bg black
set-option -g pane-active-border-fg blue
set-option -g pane-active-border-bg blue
set-option -g pane-border-fg black

# listen to alerts from all windows
set -g bell-action any

# vi is good
setw -g mode-keys vi

# Splitting panes.
bind | split-window -h
bind - split-window -v

# Moving between panes.
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Moving between windows.
# Provided you've mapped your `CAPS LOCK` key to the `CTRL` key,
# you can now move between panes without moving your hands off the home row.
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Pane resizing.
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# use : to get to the command prompt, just like vim
bind-key : command-prompt

# Setup 'v' to begin selection as in Vim
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
# bind 'y' to yank
bind-key -Tcopy-mode-vi 'y' send -X copy-selection

# Update default binding of `Enter` to also use copy-pipe
unbind -Tcopy-mode-vi Enter
bind-key -Tcopy-mode-vi Enter send -X copy-pipe-and-cancel pbcopy

# Use vi keybindings for tmux commandline input.
# # Note that to get command mode you need to hit ESC twice...
set -g status-keys vi

set -g history-limit 100000

# give more time after triggering the prefix to adjust pane sizes
set-window-option -g display-panes-time 1500

# watch for changes in background windows
setw -g monitor-activity on
set -g visual-activity on

# Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 1500

# allow scrollback to work
set-option -g terminal-overrides 'xterm*:smcup@:rmcup@'

# enable changing the cursor shape for insert mode in neovim
# https://github.com/neovim/neovim/pull/3165/files
# might be okay to rm eventually: https://github.com/neovim/neovim/issues/6978
set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

# Mouse mode on by default
# http://www.davidverhasselt.com/better-mouse-scrolling-in-tmux/
# note: as of tmux 2.1, there is only the mouse option, no
# `set -g mouse-resize-pane` on etcâ€¦
set-option -g mouse on

# Start copy mode when scrolling up, so scrolling can work
# https://github.com/tmux/tmux/issues/145#issuecomment-151123624
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

# Toggle mouse on
bind m \
  set -g mode-mouse on \;\
  set -g mouse-resize-pane on \;\
  set -g mouse-select-pane on \;\
  set -g mouse-select-window on \;\
  display 'Mouse: ON'

# Toggle mouse off
bind M \
  set -g mode-mouse off \;\
  set -g mouse-resize-pane off \;\
  set -g mouse-select-pane off \;\
  set -g mouse-select-window off \;\
  display 'Mouse: OFF'

# pass through xterm keys
set -g xterm-keys on

# clear the scrollback
bind -n C-u clear-history

# allow tmux to always expand to the full window
# setw -g aggressive-resize on
set-window-option -g aggressive-resize on

# List of plugins
# Supports `github_username/repo` or full git URLs
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'tmux-plugins/tmux-resurrect'

# requires fzf
set -g @plugin 'laktak/extrakto'
# this was the original, and now works, but using fzf seems better
# set -g @plugin 'tmux-plugins/tmux-copycat'

# this doesn't work?
# set -g @plugin 'tmux-plugins/tmux-continuum'

# Other examples:
# github_username/plugin_name    \
# git@github.com/user/plugin     \
# git@bitbucket.com/user/plugin  \

# https://github.com/tmux-plugins/tmux-resurrect/issues/29
bind C-s run ~/.tmux/plugins/tmux-resurrect/scripts/save.sh
bind C-r run ~/.tmux/plugins/tmux-resurrect/scripts/restore.sh

# plugin doesn't seem to work
# continuously save the current environment
# https://github.com/tmux-plugins/tmux-continuum/blob/master/docs/automatic_start.md
# set -g @continuum-boot 'on'
# set -g @continuum-boot-options 'iterm'

# Disabled: handled by tmux-sensible
# Fix LSOpenURLsWithRole() error on OS X. Requires reattach-to-user-namespace
# to be installed.
# via https://gist.github.com/JC1738/9616706a83ba7706ab88
# set -g default-command "reattach-to-user-namespace -l $SHELL"

# paired with tpope/vim-obesssion to restore vim sessions
# https://github.com/tmux-plugins/tmux-resurrect/blob/master/docs/restoring_vim_and_neovim_sessions.md
# for vim
set -g @resurrect-strategy-vim 'session'
# for neovim
set -g @resurrect-strategy-nvim 'session'

# restore pane too! https://github.com/tmux-plugins/tmux-resurrect/blob/master/docs/restoring_pane_contents.md
set -g @resurrect-capture-pane-contents 'on'

# extrackto
set -g @extrakto_key '/'
set -g @extrakto_default_opt 'w'
set -g @extrakto_split_direction 'v'
set -g @extrakto_split_size '7'

# THIS MUST BE LAST
# initializes TMUX plugin manager
run ~/.tmux/plugins/tpm/tpm

